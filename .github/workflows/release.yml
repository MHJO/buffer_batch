name: Create Release

on:
  push:
    branches:
      - develop  # 푸시할 브랜치 설정을 develop으로 변경

jobs:
  create_release:
    runs-on: ubuntu-latest  # Ubuntu 환경에서 실행

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'  # Python 버전 설정

      - name: Create ZIP file
        run: |
          mkdir -p release
          # 현재 작업 디렉토리에서 release 폴더로 복사할 파일들만 지정
          # 일반적으로 필요한 파일들만 포함하도록 수정 가능
          find . -maxdepth 1 -type f -exec cp {} release/ \;
          # ZIP 파일 생성
          cd release
          zip -r ../${{ github.repository }}-${{ env.NEW_TAG }}.zip .  # ZIP 파일을 release 폴더 외부에 생성

      - name: Get latest tag
        id: get_latest_tag
        run: |
          TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $TAG"
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: Increment tag version
        id: increment_tag
        run: |
          TAG=${{ env.TAG }}
          VERSION=${TAG#v}
          IFS='.' read -r -a version <<< "$VERSION"
          major=${version[0]}
          minor=${version[1]}
          patch=${version[2]}
          patch=$((patch + 1))
          NEW_TAG="v${major}.${minor}.${patch}"
          echo "New tag: $NEW_TAG"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.NEW_TAG }}
          release_name: Release ${{ env.NEW_TAG }}
          body: Release notes

      - name: Upload ZIP as release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ github.repository }}-${{ env.NEW_TAG }}.zip
          asset_name: ${{ github.repository }}-${{ env.NEW_TAG }}.zip
          asset_content_type: application/zip

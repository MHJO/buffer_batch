name: Create Release

on:
  push:
    branches:
      - develop  # 푸시할 브랜치 설정

jobs:
  create_release:
    runs-on: ubuntu-latest  # GitHub Actions의 기본 운영 체제

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'  # 사용할 Python 버전 설정

      - name: Install dependencies
        run: |
          # 필요시 의존성 패키지를 설치합니다.
          # QGIS가 설치된 환경에서 실행이 필요할 수 있습니다.
          # pip install -r requirements.txt  # 예시

      - name: Create ZIP file
        run: |
          mkdir -p build
          cp -r ./* build/  # 플러그인 파일을 build 폴더로 복사
          zip -r build/plugin.zip build/  # build 폴더의 모든 파일을 ZIP으로 압축

      - name: Get latest tag
        id: get_latest_tag
        run: |
          TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $TAG"
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: Increment tag version
        id: increment_tag
        run: |
          IFS='.' read -r -a version <<< "${{ env.TAG#v}}"
          major=${version[0]}
          minor=${version[1]}
          patch=${version[2]}
          patch=$((patch + 1))
          NEW_TAG="v${major}.${minor}.${patch}"
          echo "New tag: $NEW_TAG"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: gh-actions/create-release@v1
        with:
          tag_name: ${{ env.NEW_TAG }}
          release_name: Release ${{ env.NEW_TAG }}
          body: Release notes

      - name: Upload ZIP as release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/${{ github.repository }}-${{ env.NEW_TAG }}.zip
          asset_name: ${{ github.repository }}-${{ env.NEW_TAG }}.zip
          asset_content_type: application/zip
